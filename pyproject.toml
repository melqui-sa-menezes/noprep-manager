[tool.poetry]
name = "noprep-manager"
version = "0.1.0"
description = ""
authors = ["Melqui Menezes <melqui.menezes.dev@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1"
simple-settings = "^1.2.0"
dj-database-url = "^2.2.0"
python-dotenv = "^1.0.1"
django-import-export = "^4.1.1"
django-extensions = "^3.2.3"
django-environ = "^0.11.2"
django-cors-headers = "^4.4.0"
psycopg = "^3.2.1"
pydantic = "^2.8.2"
django-stubs-ext = "^5.0.4"
pydot = "^3.0.1"
pydotplus = "^2.0.2"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"


[tool.poetry.group.lint.dependencies]
black = "^24.8.0"
ruff = "^0.6.2"

[tool.black]
line-length = 120
target-version = ['py38', 'py311', 'py312']
force-exclude = '\.json$|migrations/'
include = '\.py$'

[tool.ruff]
target-version = "py312"
line-length = 120
exclude = [
    "**/migrations/*",
    "**/fixtures/*",
    "**/admin.py",
]
select = [
    "Q000",  # Garante o uso de aspas duplas
    "E",     # Erros de estilo (PEP8) para espaçamento correto
    "F",     # Erros de código (como variáveis indefinidas)
]

[tool.pytest.ini_options]
python_files = "test_*.py"
asyncio_mode = "auto"
env = [
    "ENVIRONMENT=development",
    "DJANGO_SETTINGS_MODULE=core.settings.test",
    "SIMPLE_SETTINGS=core.settings.development",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
