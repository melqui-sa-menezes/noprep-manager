# Generated by Django 5.1.1 on 2024-09-20 02:40

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LapTime',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('lap_number', models.IntegerField(help_text='Número da volta')),
                ('time', models.DurationField(help_text='Tempo da volta')),
                ('is_qualifying', models.BooleanField(default=False, help_text='Se a volta é de classificação (Sim/Não)')),
                ('is_valid', models.BooleanField(default=True, help_text='Se a volta é válida (Sim/Não)')),
            ],
            options={
                'verbose_name': 'Tempo de Volta',
                'verbose_name_plural': 'Tempos de Volta',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('brand', models.CharField(help_text='Marca do veículo', max_length=30)),
                ('model', models.CharField(help_text='Modelo do veículo', max_length=30)),
                ('manufacture_year', models.IntegerField(help_text='Ano de Fabricação do veículo')),
                ('plate_number', models.CharField(blank=True, help_text='Placa de identificação do veículo', max_length=8, null=True, unique=True)),
                ('insured', models.BooleanField(default=False, help_text='Se o veículo possui seguro (Sim/Não)')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('nickname', models.CharField(blank=True, help_text='Apelido do piloto', max_length=32, null=True)),
                ('license_number', models.CharField(blank=True, help_text='Número da carteira de habilitação', max_length=9, null=True)),
                ('category', models.CharField(choices=[('--', '--'), ('PAR-A - Piloto de Arrancada', 'PAR-A - Piloto de Arrancada'), ('PAR-B - Piloto de Arrancada', 'PAR-B - Piloto de Arrancada'), ('PARDJ - Piloto de Arrancada Drag Junior', 'PARDJ - Piloto de Arrancada Drag Junior'), ('PPNE-AR - Piloto Portador de Necessidades Especiais - Arrancada', 'PPNE-AR - Piloto Portador de Necessidades Especiais - Arrancada'), ('LPU-AR - Licença Prova Única - Arrancada', 'LPU-AR - Licença Prova Única - Arrancada')], help_text='Categoria da licença', max_length=63)),
                ('cba_number', models.CharField(blank=True, help_text='Número de registro CBA', max_length=12, null=True)),
                ('federation', models.CharField(choices=[('--', '--'), ('FSA', 'FSA'), ('FAAES', 'FAAES'), ('FAB', 'FAB'), ('FAEP', 'FAEP'), ('FASP', 'FASP'), ('FAERJ', 'FAERJ'), ('FAUESC', 'FAUESC'), ('FCA', 'FCA'), ('FAMS', 'FAMS'), ('FGA', 'FGA'), ('FMA', 'FMA'), ('FEPAUTO', 'FEPAUTO'), ('FPEA', 'FPEA'), ('FPARN', 'FPARN'), ('FPRA', 'FPRA'), ('FAUGO', 'FAUGO'), ('FADF', 'FADF'), ('FAEM', 'FAEM'), ('FAA', 'FAA'), ('FAT', 'FAT'), ('FAEMT', 'FAEMT'), ('FAEPI', 'FAEPI'), ('MMC', 'MMC')], help_text='Federação de origem do piloto', max_length=7)),
                ('user', models.OneToOneField(help_text='Usuário associado ao piloto', on_delete=django.db.models.deletion.CASCADE, related_name='driver', to='user_profiles.userprofile')),
            ],
            options={
                'verbose_name': 'Piloto',
                'verbose_name_plural': 'Pilotos',
            },
        ),
        migrations.CreateModel(
            name='RaceHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('position', models.IntegerField(help_text='Posição alcançada na corrida')),
                ('driver', models.ForeignKey(help_text='Piloto relacionado ao histórico', on_delete=django.db.models.deletion.CASCADE, to='drivers.driver')),
            ],
            options={
                'verbose_name': 'Histórico de Corrida',
                'verbose_name_plural': 'Históricos de Corrida',
            },
        ),
    ]
