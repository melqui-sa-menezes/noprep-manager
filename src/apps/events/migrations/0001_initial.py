# Generated by Django 5.1.1 on 2024-09-20 07:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('drivers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(help_text='Nome do tipo de Evento', max_length=30, verbose_name='Nome')),
                ('description', models.CharField(blank=True, help_text='Descrição do tipo de Evento', max_length=200, null=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Evento',
                'verbose_name_plural': 'Tipos de Eventos',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(help_text='Nome do evento', max_length=100)),
                ('date', models.DateField(help_text='Data do Evento')),
                ('starts_at', models.TimeField(blank=True, help_text='Horário de Início do Evento', null=True)),
                ('ends_at', models.TimeField(blank=True, help_text='Horário de Término do Evento', null=True)),
                ('address', models.CharField(help_text='Endereço do Evento', max_length=256)),
                ('fee', models.DecimalField(blank=True, decimal_places=2, help_text='Taxa de inscrição do Evento', max_digits=7, null=True)),
                ('regulation', models.URLField(blank=True, help_text='Acesso ao link do regulamento do Evento', null=True)),
                ('organizer', models.ForeignKey(help_text='Organizador do Evento', max_length=100, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event_type', models.ForeignKey(help_text='Tipo de Evento', on_delete=django.db.models.deletion.CASCADE, to='events.eventtype')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('subscription_date', models.DateTimeField(auto_now_add=True, help_text='Data e hora da inscrição')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('confirmed', 'Confirmada'), ('canceled', 'Cancelada')], default='pending', help_text='Status da inscrição', max_length=20)),
                ('driver', models.ForeignKey(help_text='Piloto inscrito no evento', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='drivers.driver')),
                ('event', models.ForeignKey(help_text='Evento ao qual o piloto se inscreveu', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='events.event')),
            ],
            options={
                'verbose_name': 'Inscrição',
                'verbose_name_plural': 'Inscrições',
                'ordering': ['-subscription_date'],
                'unique_together': {('driver', 'event')},
            },
        ),
    ]
